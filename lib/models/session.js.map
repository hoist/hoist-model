{"version":3,"sources":["models/session.js"],"names":[],"mappings":"AAAA;;;;;;;AACA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAI,gBAAgB,qBAAW;AAC7B,iBAAe,MAAf;AACA,QAAM;AACJ,mCADI;AAEJ,SAAK,WAAL;AACA,cAAU,+BAAV;GAHF;AAKA,gBAAc;AACZ,mCADY;AAEZ,SAAK,cAAL;GAFF;AAIA,eAAa;AACX,mCADW;AAEX,SAAK,aAAL;GAFF;AAIA,OAAK;AACH,UAAM,MAAN;AACA,cAAU,IAAV;AACA,aAAS;aAAM,uBAAO,CAAP;KAAN;GAHX;AAKA,WAAS;AACP,UAAM,OAAN;AACA,aAAS,IAAT;GAFF;CApBkB,CAAhB;;AA0BJ,cAAc,MAAd;AACA,cAAc,MAAd;AACA,cAAc,KAAd,CAAoB;AAClB,aAAW,CAAC,CAAD;CADb,EAEG;AACD,cAAY,IAAZ;AACA,UAAQ,IAAR;CAJF;;AAOA,mBAAS,KAAT,CAAe,SAAf,EAA0B,aAA1B;;AAEA,IAAI,UAAU,mBAAS,KAAT,CAAe,SAAf,CAAV;AACJ,mBAAQ,YAAR,CAAqB,OAArB;AACA,mBAAQ,YAAR,CAAqB,QAAQ,SAAR,CAArB;AACO,IAAM,sBAAO,SAAP;AACN,IAAM,wBAAQ,OAAR","file":"models/session.js","sourcesContent":["'use strict';\nimport mongoose, {\n  Schema\n}\nfrom 'mongoose';\nimport ShortId from '@hoist/mongoose-shortid';\nimport Promise from 'bluebird';\nimport mongooseTimestamps from 'mongoose-timestamp';\nimport mongooseDelete from '@hoist/mongoose-delete';\nimport moment from 'moment';\nimport keygen from 'keygenerator';\n\nlet SessionSchema = new Schema({\n  schemaVersion: String,\n  user: {\n    type: ShortId,\n    ref: 'HoistUser',\n    required: 'session must belong to a user'\n  },\n  organisation: {\n    type: ShortId,\n    ref: 'Organisation'\n  },\n  application: {\n    type: ShortId,\n    ref: 'Application'\n  },\n  key: {\n    type: String,\n    required: true,\n    default: () => keygen._(),\n  },\n  isValid: {\n    type: Boolean,\n    default: true\n  }\n});\n\nSessionSchema.plugin(mongooseTimestamps);\nSessionSchema.plugin(mongooseDelete);\nSessionSchema.index({\n  updatedAt: -1\n}, {\n  background: true,\n  sparse: true\n});\n\nmongoose.model('Session', SessionSchema);\n\nlet Session = mongoose.model('Session');\nPromise.promisifyAll(Session);\nPromise.promisifyAll(Session.prototype);\nexport const name = 'Session';\nexport const model = Session;\n"],"sourceRoot":"/source/"}