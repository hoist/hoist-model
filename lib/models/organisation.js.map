{"version":3,"sources":["models/organisation.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,WAAW,QAAQ,UAAR,CAAX;AACJ,IAAI,UAAU,QAAQ,yBAAR,CAAV;AACJ,IAAI,aAAa,QAAQ,oBAAR,CAAb;AACJ,IAAI,YAAY,QAAQ,UAAR,CAAZ;AACJ,IAAI,iBAAiB,QAAQ,wBAAR,CAAjB;;AAEJ,IAAI,SAAS,SAAS,MAAT;AACb,IAAI,qBAAqB,IAAI,MAAJ,CAAW;AAClC,iBAAe,MAAf;AACA,QAAM;AACJ,UAAM,MAAN;AACA,cAAU,+BAAV;GAFF;AAIA,OAAK;AACH,UAAM,OAAN;AACA,UAAM,EAAN;AACA,aAAS,CAAT;AACA,SAAK,EAAL;GAJF;;AAOA,QAAM;AACJ,UAAM,MAAN;AACA,WAAO,IAAP;AACA,YAAQ,IAAR;AACA,cAAU,+BAAV;GAJF;AAMA,YAAU;AACR,UAAM,OAAN;AACA,cAAU,IAAV;AACA,aAAS,KAAT;GAHF;CAnBuB,EAwBtB;AACD,QAAM,SAAN;CAzBuB,CAArB;;AA4BJ,mBAAmB,MAAnB,CAA0B,UAA1B;AACA,mBAAmB,MAAnB,CAA0B,cAA1B;;AAEA,mBAAmB,OAAnB,CAA2B,WAA3B,EAAwC,GAAxC,CAA4C,YAAY;AACtD,SAAO,KAAK,IAAL,CAD+C;CAAZ,CAA5C,CAEG,GAFH,CAEO,UAAU,KAAV,EAAiB;AACtB,OAAK,IAAL,GAAY,KAAZ,CADsB;CAAjB,CAFP;;AAMA,mBAAmB,GAAnB,CAAuB,QAAvB,EAAiC;AAC/B,YAAU,IAAV;CADF;AAGA,SAAS,KAAT,CAAe,cAAf,EAA+B,kBAA/B;;AAEA,IAAI,eAAe,SAAS,KAAT,CAAe,cAAf,CAAf;AACJ,UAAU,YAAV,CAAuB,YAAvB;AACA,UAAU,YAAV,CAAuB,aAAa,SAAb,CAAvB;AACA,QAAQ,IAAR,GAAe,cAAf;AACA,QAAQ,KAAR,GAAgB,YAAhB","file":"models/organisation.js","sourcesContent":["'use strict';\nvar mongoose = require('mongoose');\nvar ShortId = require('@hoist/mongoose-shortid');\nvar timestamps = require('mongoose-timestamp');\nvar BBPromise = require('bluebird');\nvar mongooseDelete = require('@hoist/mongoose-delete');\n\nvar Schema = mongoose.Schema;\nvar OrganisationSchema = new Schema({\n  schemaVersion: String,\n  name: {\n    type: String,\n    required: 'Organisation must have a name'\n  },\n  _id: {\n    type: ShortId,\n    base: 64,\n    retries: 4,\n    len: 20\n  },\n  //path to the git folder for this orgs repositories\n  slug: {\n    type: String,\n    index: true,\n    unique: true,\n    required: 'Organisation must have a slug'\n  },\n  personal: {\n    type: Boolean,\n    required: true,\n    default: false\n  }\n}, {\n  read: 'nearest'\n});\n\nOrganisationSchema.plugin(timestamps);\nOrganisationSchema.plugin(mongooseDelete);\n\nOrganisationSchema.virtual('gitFolder').get(function () {\n  return this.slug;\n}).set(function (value) {\n  this.slug = value;\n});\n\nOrganisationSchema.set('toJSON', {\n  virtuals: true\n});\nmongoose.model('Organisation', OrganisationSchema);\n\nvar Organisation = mongoose.model('Organisation');\nBBPromise.promisifyAll(Organisation);\nBBPromise.promisifyAll(Organisation.prototype);\nexports.name = 'Organisation';\nexports.model = Organisation;\n"],"sourceRoot":"/source/"}