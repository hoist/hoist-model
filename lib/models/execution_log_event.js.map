{"version":3,"sources":["models/execution_log_event.js"],"names":[],"mappings":"AAAA;;AACA,IAAI,WAAW,QAAQ,UAAR,CAAX;AACJ,IAAI,UAAU,QAAQ,yBAAR,CAAV;AACJ,IAAI,SAAS,SAAS,MAAT;AACb,IAAI,YAAY,QAAQ,UAAR,CAAZ;AACJ,IAAI,aAAa,QAAQ,oBAAR,CAAb;AACJ,IAAI,eAAe,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAAf;AACJ,IAAI,iBAAiB,QAAQ,wBAAR,CAAjB;;AAEJ,IAAI,0BAA0B,IAAI,MAAJ,CAAW;AACvC,iBAAe,MAAf;;AAEA,eAAa;AACX,UAAM,OAAN;AACA,SAAK,aAAL;AACA,cAAU,iDAAV;AACA,WAAO,IAAP;GAJF;AAMA,eAAa;AACX,UAAM,MAAN;AACA,UAAM;AACJ,cAAQ,YAAR;AACA,eAAS,sDAAT;KAFF;AAIA,cAAU,sDAAV;AACA,WAAO,IAAP;GAPF;AASA,cAAY;AACV,UAAM,MAAN;AACA,WAAO,IAAP;GAFF;AAIA,WAAS;AACP,UAAM,MAAN;AACA,WAAO,IAAP;GAFF;AAIA,iBAAe;AACb,UAAM,MAAN;AACA,WAAO,IAAP;GAFF;AAIA,SAAO,OAAP;AACA,WAAS,MAAT;AACA,QAAM;AACJ,UAAM,MAAN;AACA,UAAM,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,QAA7B,CAAN;AACA,aAAS,KAAT;AACA,cAAU,IAAV;GAJF;AAMA,cAAY,CAAC,MAAD,CAAZ;CAtC4B,CAA1B;;AAyCJ,wBAAwB,MAAxB,CAA+B,UAA/B;AACA,wBAAwB,MAAxB,CAA+B,cAA/B;;AAEA,wBAAwB,IAAxB,CAA6B,WAA7B,EAA0C,KAA1C,CAAgD;AAC9C,WAAS,IAAT;CADF;;AAIA,SAAS,KAAT,CAAe,mBAAf,EAAoC,uBAApC;;AAEA,IAAI,oBAAoB,SAAS,KAAT,CAAe,mBAAf,CAApB;AACJ,UAAU,YAAV,CAAuB,iBAAvB;AACA,UAAU,YAAV,CAAuB,kBAAkB,SAAlB,CAAvB;AACA,QAAQ,IAAR,GAAe,mBAAf;AACA,QAAQ,KAAR,GAAgB,iBAAhB","file":"models/execution_log_event.js","sourcesContent":["'use strict';\nvar mongoose = require('mongoose');\nvar ShortId = require('@hoist/mongoose-shortid');\nvar Schema = mongoose.Schema;\nvar BBPromise = require('bluebird');\nvar timestamps = require('mongoose-timestamp');\nvar environments = ['live', 'test', 'dev'];\nvar mongooseDelete = require('@hoist/mongoose-delete');\n\nvar ExecutionLogEventSchema = new Schema({\n  schemaVersion: String,\n  //the org that owns this application\n  application: {\n    type: ShortId,\n    ref: 'Application',\n    required: 'ExecutionLogEvent must belong to an application',\n    index: true\n  },\n  environment: {\n    type: String,\n    enum: {\n      values: environments,\n      message: 'ExecutionLogEvent must belong to a valid environment'\n    },\n    required: 'ExecutionLogEvent must belong to a valid environment',\n    index: true\n  },\n  moduleName: {\n    type: String,\n    index: true\n  },\n  eventId: {\n    type: String,\n    index: true\n  },\n  correlationId: {\n    type: String,\n    index: true\n  },\n  error: Boolean,\n  message: String,\n  type: {\n    type: String,\n    enum: ['LOG', 'ERR', 'MDL', 'EVT', 'DEPLOY'],\n    default: 'LOG',\n    required: true\n  },\n  errorStack: [String]\n});\n\nExecutionLogEventSchema.plugin(timestamps);\nExecutionLogEventSchema.plugin(mongooseDelete);\n\nExecutionLogEventSchema.path('createdAt').index({\n  expires: 3600\n});\n\nmongoose.model('ExecutionLogEvent', ExecutionLogEventSchema);\n\nvar ExecutionLogEvent = mongoose.model('ExecutionLogEvent');\nBBPromise.promisifyAll(ExecutionLogEvent);\nBBPromise.promisifyAll(ExecutionLogEvent.prototype);\nexports.name = 'ExecutionLogEvent';\nexports.model = ExecutionLogEvent;\n"],"sourceRoot":"/source/"}